/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JInternalFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.bean.Venda;
import model.bean.Venda_produto;
import model.dao.VendaDAO;
import model.dao.Venda_produtoDAO;
import static view.JMainAdmin.jDesktopAdmin;

/**
 *
 * @author Fes-Suporte
 */
public class JInternalHistorico extends javax.swing.JInternalFrame {

    /**
     * Creates new form JInternalHistorico
     */
    public JInternalHistorico() {
        initComponents();
        VendaDAO vdao = new VendaDAO();
        DefaultTableModel modelo = (DefaultTableModel) jTableHist.getModel();
        jTableHist.setRowSorter(new TableRowSorter(modelo));

        for (Venda v : vdao.read()) {
            modelo.addRow(new Object[]{
                v.getCod_venda(),
                v.getCliente_cod_cliente(),
                v.getNome_cliente(),
                v.getFuncionario_cod_funcionario(),
                v.getData_venda()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableHist = new javax.swing.JTable();

        setTitle("Historico de Vendas");

        jTableHist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código Venda", "Código Cliente", "Nome do Cliente", "Código do Funcionario", "Data de Compra"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableHist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableHistMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableHist);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableHistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableHistMouseClicked
        JInternalHistorico2 jihist2 = new JInternalHistorico2();

        Boolean exist = false;
        for (JInternalFrame internal : jDesktopAdmin.getAllFrames()) {
            if (internal.getClass().toString().equalsIgnoreCase(jihist2.getClass().toString())) {
                internal.moveToFront();
                exist = true;
            }
        }
        if (!exist) {
            jDesktopAdmin.add(jihist2);
            jihist2.setVisible(true);
        }

        VendaDAO vdao = new VendaDAO();
        Venda_produtoDAO vpdao = new Venda_produtoDAO();
        for (Venda v : vdao.read()) {
            if (jTableHist.getValueAt(jTableHist.getSelectedRow(), 0) == v.getCod_venda()) {
                jihist2.lbCodVenda.setText(v.getCod_venda().toString());
                jihist2.lbCodCliente.setText(v.getCliente_cod_cliente().toString());
                jihist2.lbNomeCliente.setText(v.getNome_cliente());
                jihist2.lbCodVendedor.setText(v.getFuncionario_cod_funcionario().toString());
                jihist2.lbNomeVendedor.setText(v.getNome_funcionario());
                jihist2.lbData.setText(v.getData_venda());
                jihist2.lbHora.setText(v.getHora_venda());
                jihist2.setTitle("Historico da Venda " + v.getCod_venda().toString());
            }
        }
        DefaultTableModel modelo = (DefaultTableModel) jihist2.jTableProdutos.getModel();
        modelo.setNumRows(0);
        
        for(Venda_produto vp: vpdao.readVenda((Integer) jTableHist.getValueAt(jTableHist.getSelectedRow(), 0))){
            modelo.addRow(new Object[]{
                vp.getProduto_cod_produto(),
                vp.getDescricao_produto(),
                vp.getQuantidade_produto(),
                vp.getValor_produto(),
                vp.getQuantidade_produto() * vp.getValor_produto()
            });
        }


    }//GEN-LAST:event_jTableHistMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableHist;
    // End of variables declaration//GEN-END:variables
}
